{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-blog-php-poo-index-mdx-cbe28d02f7bb7566b6b1.js","mappings":"0MAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,6PAA8P,KAAMQ,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,gBAAiB,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,+wBAAgxB,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,wdAAyd,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,8LAA+L,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,yEAA0EQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,uBAAwB,KAAM,KAAMM,EAAAA,cAAoBX,EAAYM,KAAM,CACzrEM,wBAAyB,CACvBC,OAAQ,2zFAER,KAAMF,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,yBAA0B,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,gfAAifQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,iCAAkC,+BAAgC,KAAMM,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,kVAAmVQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,SAAU,uCAAwC,KAAMM,EAAAA,cAAoBX,EAAYM,KAAM,CACluCM,wBAAyB,CACvBC,OAAQ,2uCAER,KAAMF,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,mCAAoCQ,EAAAA,cAAoBX,EAAYO,EAAG,CACxHO,KAAM,2FACL,OAAQ,4MAA6M,KAAMH,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,iCAAkC,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,saAAuaQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,SAAU,0EAA2EM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,UAAW,gDAAiDM,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,SAAU,oCAAqC,KAAMM,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,oWAAqW,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,iSAAkS,KAAMQ,EAAAA,cAAoBX,EAAYM,KAAM,CAC70DM,wBAAyB,CACvBC,OAAQ,g9LAER,KAAMF,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,qCAAsCQ,EAAAA,cAAoBX,EAAYO,EAAG,CAC1HO,KAAM,qCACL,iBAAkB,KAAM,KAAMH,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,cAAe,KAAMO,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,gZAAiZ,KAAMQ,EAAAA,cAAoBX,EAAYQ,GAAI,KAAM,wBAAyB,KAAMG,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,2fAA4f,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,yCAC/rC,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWjB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BC3BA,MAAMkB,EAAWC,IACf,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,MAAMG,GAAQC,EAAAA,EAAAA,GAASH,EAAKI,IAAIC,YAAYC,YAC5C,OAAOd,EAAAA,cAAoBe,EAAAA,EAAQ,CACjCC,UAAWR,EAAKI,IAAIC,YAAYI,OAC/BjB,EAAAA,cAAoB,IAAK,KAAMQ,EAAKI,IAAIC,YAAYK,MAAOlB,EAAAA,cAAoB,KAAM,MAAOA,EAAAA,cAAoB,MAAO,CACxHmB,UAAW,gCACVnB,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBoB,EAAAA,EAAa,CACnEV,MAAOA,EACPW,IAAKb,EAAKI,IAAIC,YAAYS,iBACwB,KAAhDd,EAAKI,IAAIC,YAAYU,wBAAiCvB,EAAAA,cAAoB,IAAK,KAAM,gBAAiB,IAAKA,EAAAA,cAAoB,IAAK,CACtIG,KAAMK,EAAKI,IAAIC,YAAYU,wBAC1Bf,EAAKI,IAAIC,YAAYW,2BAA4BxB,EAAAA,cAAoB,MAAO,KAAMS,GAAU,EAGpFgB,EAAOC,IAClB,IAAI,KAAClB,GAAQkB,EACb,OAAO1B,EAAAA,cAAoB2B,EAAAA,EAAK,CAC9BV,MAAOT,EAAKI,IAAIC,YAAYI,OAC5B,EAGW,SAASW,EAAiBxC,GACvC,OAAOY,EAAAA,cAAoBM,EAAUlB,EAAOY,EAAAA,cAAoB6B,EAAqBzC,GACvF,C,sECGO,MAAM0C,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBhC,GAC/B,MAAMiC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf/B,EACFA,EAAWiC,GAGb,IAAIA,KAAsBjC,IAChC,CAACiC,EAAmBjC,GACzB,C","sources":["webpack://portfolio/./blog/php-poo/index.mdx","webpack://portfolio/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    em: \"em\",\n    span: \"span\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Aujourd'hui, j'aimerais aborder cet article sur un ton plus léger. Je voudrais vous raconter comment j'ai découvert la programmation\\r\\norientée objet, comment je l'ai comprise et comment tout cela m'a amené à concevoir un projet assez... original !\"), \"\\n\", React.createElement(_components.h2, null, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"J'ai commencé l'apprentissage de la programmation avec java fin 2012. J'ai d'abord appris la programmation impérative et j'apprenais avec\\r\\npas mal d'aisance. Puis j'ai migré sur la programmation orienté objet et là, cela s'est beaucoup moins bien passé. Avec le recul je pense\\r\\nque cela est dû à plusieurs facteurs. D'abord les travaux à réaliser étaient moins créatifs car ils s'agissait beaucoup d'écriture\\r\\nde setteurs de getteurs : du code bien redondant à coup de copier coller. De plus, j'ai été confronté à ce que j'appelle le problème du\\r\\ncomment vs pourquoi. C'est à dire que les cours étaient bien plus orientés sur ce que la poo apportait sans pour autant justifier ses choix\\r\\nde design. Je savais comment ça marchait, mais pas pourquoi ça marchait comme ça.\"), \"\\n\", React.createElement(_components.p, null, \"Cela a duré jusqu'en 2015 où, pendant que je suivais des moocs de programmation, je suis tombé sur un langage assez exotique vis à vis de ce\\r\\nque je connaissais jusque là : Pharo. Contrairement à Java où Php, Pharo est un langage de programmation objet pur et les instructions impératives\\r\\ndes deux autres langages, comme les conditions et les boucles, sont alors des appels de méthode. Autre changement assez conséquent : les classes\\r\\nelle-même sont des objets.\"), \"\\n\", React.createElement(_components.p, null, \"Malgré sa syntaxe assez particulière et le fait que je n'ai toujours pas produit de code pharo à ce jour, ça a été une révélation qui m'a grandement\\r\\naidé à comprendre l'orienté objet.\"), \"\\n\", React.createElement(_components.p, null, \"Pour un peu de culture, voici un exmeple de code pharo, tiré du livre \", React.createElement(_components.em, null, \"pharo par l'exemple\"), \".\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"smalltalk\\\"><pre style=\\\"counter-reset: linenumber NaN\\\" class=\\\"language-smalltalk line-numbers\\\"><code class=\\\"language-smalltalk\\\">initialize\\r\\n  <span class=\\\"token temporary-variables\\\"><span class=\\\"token punctuation\\\">|</span> <span class=\\\"token variable\\\">sampleCell</span> <span class=\\\"token variable\\\">width</span> <span class=\\\"token variable\\\">height</span> <span class=\\\"token variable\\\">n</span> <span class=\\\"token punctuation\\\">|</span></span>\\r\\n  <span class=\\\"token keyword\\\">super</span> initialize<span class=\\\"token punctuation\\\">.</span>\\r\\n  n <span class=\\\"token operator\\\">:=</span> <span class=\\\"token keyword\\\">self</span> cellsPerSide<span class=\\\"token punctuation\\\">.</span>\\r\\n  sampleCell <span class=\\\"token operator\\\">:=</span> LOCell <span class=\\\"token keyword\\\">new</span><span class=\\\"token punctuation\\\">.</span>\\r\\n  width <span class=\\\"token operator\\\">:=</span> sampleCell width<span class=\\\"token punctuation\\\">.</span>\\r\\n  height <span class=\\\"token operator\\\">:=</span> sampleCell height<span class=\\\"token punctuation\\\">.</span>\\r\\n  <span class=\\\"token keyword\\\">self</span> bounds<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token operator\\\">@</span><span class=\\\"token number\\\">5</span> extent<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>width<span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">@</span><span class=\\\"token punctuation\\\">(</span>height<span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">self</span> borderWidth<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>\\r\\n  cells <span class=\\\"token operator\\\">:=</span> Matrix <span class=\\\"token keyword\\\">new</span><span class=\\\"token punctuation\\\">:</span> n tabulate<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token block-arguments\\\"><span class=\\\"token variable\\\">:i</span> <span class=\\\"token variable\\\">:j</span> <span class=\\\"token punctuation\\\">|</span></span> <span class=\\\"token keyword\\\">self</span> newCellAt<span class=\\\"token punctuation\\\">:</span> i at<span class=\\\"token punctuation\\\">:</span> j <span class=\\\"token punctuation\\\">]</span></code><span aria-hidden=\\\"true\\\" class=\\\"line-numbers-rows\\\" style=\\\"white-space: normal; width: auto; left: 0;\\\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Et Php dans tout ça ?\"), \"\\n\", React.createElement(_components.p, null, \"C'est peu de temps après que je me suis penché sur le langage Php, et l'onboarding n'a pas été des plus fameux ! Je pourrais critiquer pas mal de\\r\\npoints mais je me concentrerais sur un seul, ce n'était pas l'orienté objet que j'avais appris à aimer. Cela a été la source de pas mal de\\r\\nfrustrations, au point qu'il m'est venu l'envie d'y palier en lançant un projet assez loufoque : recréer l'OOP de Php. N'étant pas sûr de la\\r\\npossibilité d'une telle démarche, je décide de ne renomer \", React.createElement(_components.em, null, \"Php's Object Oriented Project\"), \", ou POOP pour les intimes.\"), \"\\n\", React.createElement(_components.p, null, \"Les premier essais ne sont pas fameux et font usage de code assez discutable. C'est assez logique, si je veux retrouver cette POO que j'aime\\r\\nil me faut refaire la classes, l'héritage, l'accès à self et à super... tout ça n'est pas chose aisée. Pour vous montrer un exmeple, voici un\\r\\nbout de code du premier jet avec une fonction \", React.createElement(_components.em, null, \"_self\"), \" qui renvoi l'objet qui l'appelle :\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"php\\\"><pre style=\\\"counter-reset: linenumber NaN\\\" class=\\\"language-php line-numbers\\\"><code class=\\\"language-php\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function-definition function\\\">_self</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\r\\n    <span class=\\\"token variable\\\">$objet</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">debug_backtrace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$objet</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string double-quoted-string\\\">\\\"object\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span></code><span aria-hidden=\\\"true\\\" class=\\\"line-numbers-rows\\\" style=\\\"white-space: normal; width: auto; left: 0;\\\"><span></span><span></span><span></span><span></span></span></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Mon code complet est disponible \", React.createElement(_components.a, {\n    href: \"https://github.com/HellperKK/Poop/blob/087e249d783ff5058f7aafd87a802bd8855500dc/Lib.php\"\n  }, \"ici\"), \", et on peut trouver\\r\\nd'autres excentricités de code. Pour cette raison, le projet sera mis de côté, faute d'être une solution pratique à utiliser. Puis, quelques années\\r\\nplus tard je l'ai repris.\"), \"\\n\", React.createElement(_components.h2, null, \"IO, Javascript et prototypage\"), \"\\n\", React.createElement(_components.p, null, \"Si j'aime l'idée que les classes soient des objets, je dois avouer que cela implique pas mal de complexité. En Pharo chaque classe créée\\r\\najoute la création d'une metaclasse dont la classe est instance, avec un arbre d'héritage de metaclasses en parallèle de celui des classes.\\r\\nIl y a aussi Ruby, qui propose une alternative moins lourde mais tout de même tordue à mon sens. Toute classe est instance de la classe \", React.createElement(_components.em, null, \"Class\"), \",\\r\\nqui est instance d'elle-même, et hérite indirectement de la class \", React.createElement(_components.em, null, \"Object\"), \" qui du coup est aussi instance de la classe \", React.createElement(_components.em, null, \"Class\"), \". De quoi donner le\\r\\ntourni...\"), \"\\n\", React.createElement(_components.p, null, \"Au bout d'un moment et à force de réflexions m'est venue une question : si je veux manipuler des objets qui sont instances de classes elle-même objet,\\r\\nne serait-être pas préférable de mettre les deux concepts de classes et d'instances au même niveau pour ne manipuler que des objets ? C'est ainsi que\\r\\nje me suis intéressé au concept de prototype.\"), \"\\n\", React.createElement(_components.p, null, \"En m'inspirant des langages de programmtion IO et javascript (avec un peu de python), j'ai trouvé moyen de faire une bibliothèque Php permettant de\\r\\nfaire de la Poo sans avoir à écrire de classe. Une seule classe est nécessaire et est déjà fournie. Le fonctionnement est le suivant :\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"php\\\"><pre style=\\\"counter-reset: linenumber NaN\\\" class=\\\"language-php line-numbers\\\"><code class=\\\"language-php\\\"><span class=\\\"token php language-php\\\"><span class=\\\"token delimiter important\\\">&lt;?php</span>\\r\\n\\r\\n<span class=\\\"token comment\\\">// On crée une instance en clonant l'objet statique object de la bibliothèque</span>\\r\\n<span class=\\\"token keyword\\\">include</span> <span class=\\\"token string double-quoted-string\\\">\\\"src/lib.php\\\"</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token variable\\\">$Range</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name static-context\\\">Instance</span><span class=\\\"token operator\\\">::</span><span class=\\\"token keyword type-declaration\\\">object</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token comment\\\">// On définit les propriété de notre objet range</span>\\r\\n<span class=\\\"token variable\\\">$Range</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">max</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token variable\\\">$Range</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">min</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token comment\\\">// Pour la définition d'une méthode, comme en python le premier paramètre est l'instance et est obligatoire</span>\\r\\n<span class=\\\"token comment\\\">// Il est passé implicitement à la méthode, qu'on utilise comme ceci => $Range->include(42)</span>\\r\\n<span class=\\\"token variable\\\">$Range</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">include</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$self</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$self</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">max</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$self</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">min</span> <span class=\\\"token operator\\\">&lt;=</span> <span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token comment\\\">// On peut créer une méthode make pour produire des ranges à volonté</span>\\r\\n<span class=\\\"token variable\\\">$Range</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">make</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$self</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$min</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$max</span><span class=\\\"token punctuation\\\">)</span>\\r\\n<span class=\\\"token punctuation\\\">{</span>\\r\\n  <span class=\\\"token variable\\\">$new</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$self</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token variable\\\">$new</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">min</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$min</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token variable\\\">$new</span><span class=\\\"token operator\\\">-></span><span class=\\\"token property\\\">max</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$max</span><span class=\\\"token punctuation\\\">;</span>\\r\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$new</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\r\\n\\r\\n<span class=\\\"token comment\\\">// A l'usage</span>\\r\\n<span class=\\\"token variable\\\">$newRange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$Range</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\r\\n<span class=\\\"token variable\\\">$newRange</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">include</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">42</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span></code><span aria-hidden=\\\"true\\\" class=\\\"line-numbers-rows\\\" style=\\\"white-space: normal; width: auto; left: 0;\\\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Le repo du projet est trouvable à \", React.createElement(_components.a, {\n    href: \"https://github.com/HellperKK/Poop\"\n  }, \"cette adresse\"), \".\"), \"\\n\", React.createElement(_components.h2, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"En conclusion je dirais que j'ai beaucoup exploré le concept d'orienté objet durant cette aventure. C'est un paradigme léger\\r\\nqui permet de nombreuses interprétations, ce qui peut lui être reproché, mais j'y vois aussi une force. Au final je n'utilise pas\\r\\nPoop dans mon code Php et je suis assez dubitatif quant à ses perofrmances, mais je suis content de ce que j'ai pu apprendre en chemin.\"), \"\\n\", React.createElement(_components.h3, null, \"Epilogue et lemonade\"), \"\\n\", React.createElement(_components.p, null, \"En plus de cela, j'ai fini par ajouter cette forme d'orienté objet dans un langage de programmation que je développe, baptisé\\r\\nlemonade. Son nom viens de la grande lignée des langages générant du javascript (coffescript, caffeine, earl grey...). Bien qu'il me reste\\r\\nencore beaucoup de travail, lemonade a pour but d'être un langage de programmation statiquement typé, orienté objet et fonctionnel, mais\\r\\ntrès peu impératif, qui transpilera en js. Ce qui j'espère lui permettra de sortir du lot :)\"), \"\\n\", React.createElement(_components.p, null, \"Merci d'avoir lu et à une prochaine !\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"E:/Dev/HellperKK.github.io/blog/php-poo/index.mdx\";\nimport * as React from 'react';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport './syntax.css';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), React.createElement(\"hr\", null), React.createElement(\"div\", {\n    className: \"flex flex-row justify-center\"\n  }, React.createElement(\"div\", null, React.createElement(GatsbyImage, {\n    image: image,\n    alt: data.mdx.frontmatter.hero_image_alt\n  }), data.mdx.frontmatter.hero_image_credit_link !== \"\" && React.createElement(\"p\", null, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    href: data.mdx.frontmatter.hero_image_credit_link\n  }, data.mdx.frontmatter.hero_image_credit_text)))), React.createElement(\"div\", null, children));\n};\nconst query = \"3930020298\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","em","span","a","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","BlogPost","_ref","data","children","image","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","date","className","GatsbyImage","alt","hero_image_alt","hero_image_credit_link","hero_image_credit_text","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}